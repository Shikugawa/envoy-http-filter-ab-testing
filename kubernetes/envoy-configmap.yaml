apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-api-proxy-config
data:
  # Adding new entries here will make them appear as files in the deployment.
  # Please update k8s.io/k8s.io/README.md when you update this file
  envoy.yaml: |
    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 8000
          filter_chains:
            - filters:
                - name: envoy.http_connection_manager
                  config:
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.file_access_log
                        config:
                          path: /dev/stdout
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: backend_service
                          domains:
                            - "*"
                          routes:
                            - match:
                                prefix: "/blue/welcome"
                              route:
                                cluster: envoy-api-blue-service
                            - match:
                                prefix: "/green/welcome"
                              route:
                                cluster: envoy-api-green-service
                            - match:
                                prefix: "/login"
                              route:
                                cluster: envoy-api-blue-service
                    http_filters:
                      - name: envoy.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua
                          inline_code: |
                            function envoy_on_request(request_handle)
                              local percentage = 0.4
                              local div = 10
                              local path = request_handle:headers():get(":path")

                              if path == "/welcome" then
                                local mod = request_handle:headers():get("x-user-id") % div
                                
                                if mod >= 0 and mod < div*percentage then
                                  request_handle:headers():replace(":path", "/blue/welcome")
                                else
                                  request_handle:headers():replace(":path", "/green/welcome")
                                end
                              end
                            end

                            function envoy_on_response(response_handle)
                              response_handle:headers():add("x-envoy-custom-header", 3333333333)
                            end
                      - name: envoy.router
                        typed_config: {}
      clusters:
        - name: envoy-api-blue-service
          connect_timeout: 0.250s
          type: static
          load_assignment:
            cluster_name: envoy-api-blue-service
            endpoints:
              lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 5000
        - name: envoy-api-green-service
          connect_timeout: 0.250s
          type: static
          load_assignment:
            cluster_name: envoy-api-green-service
            endpoints:
              lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: 127.0.0.1
                        port_value: 4000
    admin:
      access_log_path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
